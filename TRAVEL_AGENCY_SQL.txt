CREATE TABLE TRAVEL_AGENCY(
	TA_ID VARCHAR(10) NOT NULL,
	TA_EMAIL VARCHAR(26),
	TA_NAME VARCHAR(26),
	TA_NUM BIGINT(11),
	CONSTRAINT TAGPK1 PRIMARY KEY(TA_ID)
);

CREATE TABLE TA_ADDRESS(
	TA_STREET_NO INT NOT NULL,
	TA_ID VARCHAR(10),
	TA_CITY VARCHAR(26),
	TA_DISTRICT VARCHAR(26),
	TA_STATE VARCHAR(26),
	TA_COUNTRY VARCHAR(26),
	CONSTRAINT TADPK1 PRIMARY KEY(TA_STREET_NO, TA_ID),
	CONSTRAINT TADFK1 FOREIGN KEY(TA_ID) REFERENCES TRAVEL_AGENCY(TA_ID)
);

CREATE TABLE CUSTOMER(
	C_ID VARCHAR(10) NOT NULL,
	C_FNAME VARCHAR(26),
	C_LNAME VARCHAR(26),
	C_NUM BIGINT(11),
	C_EMAIL VARCHAR(32),
	CONSTRAINT CPK1 PRIMARY KEY(C_ID)
);

CREATE TABLE C_ADDRESS(
	C_STREET_NO VARCHAR(10) NOT NULL,
	C_CITY VARCHAR(26),
	C_DISTRICT VARCHAR(26),
	C_STATE VARCHAR(26),
	C_COUNTRY VARCHAR(26),
	C_ID VARCHAR(10),
	CONSTRAINT CAPK1 PRIMARY KEY(C_STREET_NO, C_ID),
	CONSTRAINT CAFK1 FOREIGN KEY(C_ID) REFERENCES CUSTOMER(C_ID)
);

CREATE TABLE AGENCY_CUSTOMER(
	TA_ID VARCHAR(10),
	C_ID VARCHAR(10),
	CONSTRAINT ACUK1 UNIQUE(TA_ID, C_ID),
	CONSTRAINT FOREIGN KEY(TA_ID) REFERENCES TRAVEL_AGENCY(TA_ID),
	CONSTRAINT ACFK1 FOREIGN KEY(C_ID) REFERENCES CUSTOMER(C_ID)
);

CREATE TABLE RECOMMENDED_PACKAGE_TOUR(
	RPK_ID VARCHAR(10) NOT NULL,
	RPK_LOCATION VARCHAR(26),
	RPK_HOTEL VARCHAR(26),
	RPK_PRICE INT,
	RPK_TRANSPORT VARCHAR(26),
	RPK_EXP_DATE DATE,
	RPK_DAYS INT,
	TA_ID VARCHAR(10),
	CONSTRAINT RPTPK1 PRIMARY KEY(RPK_ID),
	CONSTRAINT RPTFK1 FOREIGN KEY(TA_ID) REFERENCES TRAVEL_AGENCY(TA_ID)
);

CREATE TABLE PACKAGE(
	PCK_ID varchar(10) NOT NULL,
	TA_ID varchar(10),
	PCK_LOCATION varchar(30),
	PCK_HOTEL varchar(40),
	PCK_PRICE float(10,2),
	PCK_TRANSPORT varchar(20),
	PCK_EXP_DATE DATE,
	PCK_DAYS int(10),
	constraint PCKPK1 primary key(PCK_ID),
	constraint PCKFK1 foreign key(TA_ID) references TRAVEL_AGENCY(TA_ID)
);

CREATE TABLE RESERVATION(
	R_ID varchar(10) NOT NULL,
	PCK_ID varchar(10),
	C_ID varchar(10),
	R_PEOPLE int(60),
	R_END_DATE DATE,
	R_START_DATE DATE,
	constraint RPK1 primary key(R_ID),
	constraint RFK1 foreign key(PCK_ID) references PACKAGE(PCK_ID),
	constraint RFK2 foreign key(C_ID) references CUSTOMER(C_ID)
);

CREATE TABLE PROMOTION(
	PR_ID varchar(10) NOT NULL,
	TA_ID varchar(10),
	PCK_ID varchar(10),
	C_ID varchar(10),
	PR_CONDITIONS varchar(60),
	PR_DETAILS varchar(40),
	constraint PRPK1 primary key(PR_ID),
	constraint PRPF1 foreign key(TA_ID) references TRAVEL_AGENCY(TA_ID),
	constraint PRPF2 foreign key(PCK_ID) references PACKAGE(PCK_ID),
	constraint PRPF3 foreign key(C_ID) references CUSTOMER(C_ID)
);

CREATE TABLE PAYMENT(
	P_ID varchar(10) NOT NULL,
	R_ID varchar(10),
	C_ID varchar(10),
	P_TYPE varchar(10),
	P_DATE DATE,
	P_PRICE float(10,2),
	constraint PPK1 primary key(P_ID),
	constraint PFK1 foreign key(R_ID) references RESERVATION(R_ID),
	constraint PFK2 foreign key(C_ID) references CUSTOMER(C_ID)
);




INSERT INTO TRAVEL_AGENCY VALUES('1AO0000001', 'MAKEMYTRIP@GMAIL.COM', 'MAKEMYTRIP', 9900213122);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000002', 'YATRA@GMAIL.COM', 'YATRA', 8809292921);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000003', 'IXIGO@GMAIL.COM', 'IXIGO', 4304392956);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000004', 'EASYGO@GMAIL.COM', 'EASYGO', 9876553523);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000005', 'GOIBIBO@GMAIL.COM', 'GOIBIBO', 9906752301);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000006', 'CLEARTRIP@GMAIL.COM', 'CLEARTRIP', 9796338668);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000007', 'PAYTM@GMAIL.COM', 'PAYTM', 9768987898);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000008', 'HOLIDAY@GMAIL.COM', 'HOLIDAY', 6767262673);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000009', 'SHEHAR_GHOMO@GMAIL.COM', 'SHEHAR_GHOMO', 7700665352);
INSERT INTO TRAVEL_AGENCY VALUES('1AO0000010', 'VACATION@GMAIL.COM', 'VACATION', 8803465465);

INSERT INTO TA_ADDRESS VALUES( 23, '1AO0000001', 'ANANTNAG', 'ANANTNAG', 'J AND K', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 253, '1AO0000002', 'RANGRETH', 'SRINAGAR', 'J AND K', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 76, '1AO0000003', 'HYDERPORA', 'SRINAGAR', 'J AND K', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 89, '1AO0000004', 'TUMKUR', 'TUMAKURU', 'KARNATAKA', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 535, '1AO0000005', 'BTM LAYOUT', 'BANGALORE', 'KARNATAKA', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 83, '1AO0000006', 'VIDYANAGAR', 'BALLARI', 'KARNATAKA', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 83, '1AO0000007', 'MARATHALLI', 'BANGALORE', 'KARNATAKA', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 83, '1AO0000008', 'GHANDHI NAGAR', 'NEW DELHI', 'DELHI', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 83, '1AO0000009', 'GHANDHI NAGAR', 'NEW DELHI', 'DELHI', 'INDIA');
INSERT INTO TA_ADDRESS VALUES( 813, '1AO0000010', 'ANANTNAG', 'ANANTNAG', 'J AND K', 'INDIA');

INSERT INTO CUSTOMER VALUES('1C00000001', 'KAISAR', 'DAR', 7006605443, 'KAISARSHABIRDAR@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000002', 'KASTHURI', 'CM', 7892748768, 'KASTHURIC907@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000003', 'DAWOOD', 'DAR', 1231231231, 'DAWOOD9055@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000004', 'AMAAN', '', 9898989898, 'AMAAN@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000005', 'SAHIL', '', 9696969696, 'SAHIL@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000006', 'AISHA', 'SHABIR', 9797979797, 'AISHA@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000007', 'RUFFYDA', 'KHAN', 9999999999, 'RUFFYDA@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000008', 'FAHEEM', 'KHANDAY', 9595959595, 'FAHEEM@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000009', 'MAHRUKH', 'KHANDAY', 9494949494, 'MAHRUKH@GMAIL.COM');
INSERT INTO CUSTOMER VALUES('1C00000010', 'DIYA', '', 9393939393, 'DIYA@GMAIL.COM');

INSERT INTO C_ADDRESS VALUES(254, 'ANANTNAG', 'ANANTNAG', 'J AND K', 'INDIA', '1C00000001');
INSERT INTO C_ADDRESS VALUES(254, 'ANANTNAG', 'ANANTNAG', 'J AND K', 'INDIA', '1C00000003');
INSERT INTO C_ADDRESS VALUES(254, 'ANANTNAG', 'ANANTNAG', 'J AND K', 'INDIA', '1C00000006');
INSERT INTO C_ADDRESS VALUES(354, 'BARSOO', 'PULWAMA', 'J AND K', 'INDIA', '1C00000008');
INSERT INTO C_ADDRESS VALUES(397, 'BARSOO', 'PULWAMA', 'J AND K', 'INDIA', '1C00000009');
INSERT INTO C_ADDRESS VALUES(385, 'SANATNAGAR', 'SRINAGAR', 'J AND K', 'INDIA', '1C00000005');
INSERT INTO C_ADDRESS VALUES(676, 'KALKATA', 'WEST BENGAL', 'WEST BENGAL', 'INDIA', '1C00000004');
INSERT INTO C_ADDRESS VALUES(764, 'GHANDHI NAGAR', 'BANGALORE', 'KARNATAKA', 'INDIA', '1C00000002');
INSERT INTO C_ADDRESS VALUES(678, 'UTRASOO', 'ANANTNAG', 'J AND K', 'INDIA', '1C00000007');
INSERT INTO C_ADDRESS VALUES(679, 'GHANDHI NAGAR', 'NEW DELHI', 'DELHI', 'INDIA', '1C00000010');

INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000001', '1C00000001');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000007', '1C00000002');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000002', '1C00000003');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000004', '1C00000004');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000006', '1C00000005');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000006', '1C00000006');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000008', '1C00000007');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000009', '1C00000008');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000009', '1C00000009');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000009', '1C00000010');
INSERT INTO AGENCY_CUSTOMER VALUES('1AO0000001', '1C00000010');

INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000001', 'GULMARGH', 'VIDHANTHA', '80000', 'ROAD/SUV', '2020-09-20', 7, '1AO0000001');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000002', 'DUDH PATHRI', 'FORTUNE', '66000', 'ROAD/SUV', '2020-10-21', 7, '1AO0000001');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000003', 'HUBLI', 'NAVEEN HUBLI', '66000', 'ROAD/SUV', '2020-10-21', 7, '1AO0000006');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000004', 'BALLARY', 'POLA PARADISE', '66000', 'ROAD/SUV', '2020-10-21', 7, '1AO0000006');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000005', 'GHANDHI NAGAR', 'IBIS NEW DELHI AEROCITY', '110000', 'ROAD/SUV', '2020-10-25', 7, '1AO0000008');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000006', 'GHANDHI NAGAR', 'IBIS NEW DELHI AEROCITY', '100000', 'ROAD/SUV', '2020-10-25', 7, '1AO0000009');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000007', 'PAHALGHAM', 'FORTUNE', '150000', 'ROAD/SUV', '2021-01-01', 7, '1AO0000008');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000008', 'SHIMLA', 'TAJ', '170000', 'ROAD/SUV', '2021-01-01', 10, '1AO0000009');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000009', 'GULMARGH', 'VIDHANTHA', '50000', 'ROAD/SUV', '2020-09-20', 5, '1AO0000001');
INSERT INTO RECOMMENDED_PACKAGE_TOUR VALUES('1RP0000010', 'GULMARGH', 'VIDHANTHA', '30000', 'ROAD/SUV', '2020-09-20', 2, '1AO0000001');

INSERT INTO PACKAGE VALUES('1PK0000001', '1AO0000001', 'KARNATAKA', 'HOTEL VIDHANTA', 18998.99, 'ROAD/SUV', '2020-10-19', 3);
INSERT INTO PACKAGE VALUES('1PK0000002', '1AO0000002', 'J AND K', 'FORTUNE', 188888, 'ROAD/SUV', '2021-12-01', 9);
INSERT INTO PACKAGE VALUES('1PK0000003', '1AO0000002', 'HIMACHAL', 'HOTEL PARADISE', 139999.99, 'ROAD/SUV', '2020-05-03', 10);
INSERT INTO PACKAGE VALUES('1PK0000004', '1AO0000003', 'KARNATAKA', 'HOTEL INN', 20000.00, 'ROAD/SUV', '2020-12-12', 4);
INSERT INTO PACKAGE VALUES('1PK0000005', '1AO0000004', 'DUBAI', 'HAYATT REGENCY DUBAI CREEK HEIGHTS', 70000, 'ROAD/SUV', '2020-03-09', 3);
INSERT INTO PACKAGE VALUES('1PK0000006', '1AO0000006', 'DUBAI', 'RODA AL MUROOJ HOTEL', 80000, 'ROAD/SUV', '2020-03-09', 3);
INSERT INTO PACKAGE VALUES('1PK0000007', '1AO0000007', 'DELHI', 'HOTEL TAJ', 70000, 'ROAD/SUV', '2020-09-09', 3);
INSERT INTO PACKAGE VALUES('1PK0000008', '1AO0000008', 'J AND K', 'KHYBER RESORT', 90000, 'ROAD/SUV', '2021-01-01', 3);
INSERT INTO PACKAGE VALUES('1PK0000009', '1AO0000009', 'J AND K', 'HOTEL KANWAL', 12000, 'ROAD/SUV', '2021-01-01', 2);
INSERT INTO PACKAGE VALUES('1PK0000010', '1AO0000005', 'KARNATAKA', 'TAJ HOTEL', 50000, 'ROAD/SUV', '2021-01-01', 3);

INSERT INTO RESERVATION VALUES('1R00000001', '1PK0000001', '1C00000001', 3, '2020-12-30', '2020-11-30');
INSERT INTO RESERVATION VALUES('1R00000002', '1PK0000002', '1C00000003', 3, '2020-11-30', '2020-10-30');
INSERT INTO RESERVATION VALUES('1R00000003', '1PK0000003', '1C00000003', 3, '2020-03-30', '2020-04-30');
INSERT INTO RESERVATION VALUES('1R00000004', '1PK0000004', '1C00000004', 3, '2020-11-30', '2020-10-30');
INSERT INTO RESERVATION VALUES('1R00000005', '1PK0000006', '1C00000006', 3, '2020-11-30', '2020-10-30');
INSERT INTO RESERVATION VALUES('1R00000006', '1PK0000008', '1C00000002', 9, '2020-07-21', '2020-07-19');
INSERT INTO RESERVATION VALUES('1R00000007', '1PK0000009', '1C00000008', 2, '2020-08-21', '2020-08-20');
INSERT INTO RESERVATION VALUES('1R00000008', '1PK0000009', '1C00000010', 5, '2020-09-06', '2020-09-04');
INSERT INTO RESERVATION VALUES('1R00000009', '1PK0000006', '1C00000009', 5, '2020-10-14', '2020-10-12');
INSERT INTO RESERVATION VALUES('1R00000010', '1PK0000005', '1C00000002', 1, '2020-12-20', '2020-12-18');

INSERT INTO PAYMENT VALUES('1PY0000001', '1R00000001', '1C00000001','CHEQUE', '2020-03-01', 18000.00);
INSERT INTO PAYMENT VALUES('1PY0000002', '1R00000002', '1C00000003', 'UPI', '2020-03-02', 180000.00);
INSERT INTO PAYMENT VALUES('1PY0000003', '1R00000003', '1C00000003', 'CHEQUE', '2020-02-29', 130000.00);
INSERT INTO PAYMENT VALUES('1PY0000004', '1R00000004', '1C00000004', 'CASH', '2020-02-28', 68000.00);
INSERT INTO PAYMENT VALUES('1PY0000005', '1R00000005', '1C00000006', 'CASH', '2020-01-01', 80000.00);
INSERT INTO PAYMENT VALUES('1PY0000006', '1R00000006', '1C00000002','CHEQUE', '2020-07-15', 270000.00);
INSERT INTO PAYMENT VALUES('1PY0000007', '1R00000007', '1C00000008', 'UPI', '2020-08-02', 12000.00);
INSERT INTO PAYMENT VALUES('1PY0000008', '1R00000008', '1C00000010', 'CHEQUE', '2020-08-29', 20000.00);
INSERT INTO PAYMENT VALUES('1PY0000009', '1R00000009', '1C00000009', 'CASH', '2020-09-28', 180000.00);
INSERT INTO PAYMENT VALUES('1PY0000010', '1R00000010', '1C00000002', 'CASH', '2020-12-01', 70000.00);

INSERT INTO PROMOTION VALUES('1PR0000001', '1AO0000001', '1PK0000001', '1C00000003', 'valid for next trip with more than 4 members', '30% off');
INSERT INTO PROMOTION VALUES('1PR0000002', '1AO0000002', '1PK0000002', '1C00000004', 'valid for 2 members', 'free dessert');
INSERT INTO PROMOTION VALUES('1PR0000003', '1AO0000003', '1PK0000003', '1C00000003', 'valid for bill above 500', '50% off');
INSERT INTO PROMOTION VALUES('1PR0000004', '1AO0000001', '1PK0000004', '1C00000003', 'valid before december', 'free trip to maldives');
INSERT INTO PROMOTION VALUES('1PR0000005', '1AO0000002', '1PK0000005', '1C00000003', 'valid for 4 members above', 'free dinner');

5.1.3: SIMPLE QUERIES
	Q1: SELECT OPERATION
		SELECT CUSTOMER ID AND FIRST NAME FROM CUSTOMER.
		SELECT C_ID,C_FNAME FROM CUSTOMER;

	Q2: ALTER OPERATION
		Q2.1 ADD CHECK CONSTRAINT TO PAYMENT PRICE, IT SHOULD ALWAYS BE POSITIVE.
			 ALTER TABLE PAYMENT ADD CHECK(P_PRICE>0);
		Q2.2 ADD NUMBER OF PEOPLE ATTRIBUTE TO PACKAGE TABLE.
			 ALTER TABLE PACKAGE ADD PCK_PEOPLE INT;
			 
	Q3: UPDATE
		Q3.1 CHANGE PRICE=120000 FOR THE CUSTOMER WITH PAYMENT ID='1PY0000011'.
			 UPDATE PAYMENT SET P_PRICE=120000 WHERE P_ID='1PY0000011';
		Q3.2 CHANGE NUMBER_OF_PEOPLE=4 FOR THE CUSTOMER WITH RESERVATION ID='1R00000011'.
			 UPDATE RESERVATION SET R_PEOPLE=4 WHERE R_ID='1R00000011';

	Q3: SET OPERATIONS
		Q3.1 UNION OPERATION
			 LIST ALL THE AGENCIES AND CUSTOMERS WITH THEIR IDS.
			 SELECT TA_ID AS ID, TA_NAME AS NAME
			 FROM TRAVEL_AGENCY
			 UNION
			 SELECT C_ID AS ID, C_FNAME AS NAME
			 FROM CUSTOMER;
		Q3.2 INTERSECTION OPERATION
			 LIST THE PACKAGES WHICH ATLEAST BOUGHT ONCE BY THE CUSTOMER.
			 SELECT PCK_ID AS PACKAGE_ID FROM RESERVATION
			 INTERSECT
			 SELECT PCK_ID AS PACKAGE_ID FROM PACKAGE;
		Q3.3 DIFFERENCE OPERATION
			 LIST ALL THE PACKAGES NOT BOUGHT BY THE CUSTOMERS.
			 SELECT PCK_ID AS PACKAGE_ID FROM PACKAGE
			 MINUS
			 SELECT PCK_ID AS PACKAGE_ID FROM RESERVATION

	Q4: AGGREGATE OPERATIONS
		Q4.1 COUNT THE TOTAL NUMBER OF PACKAGES AVAILABLE.
		 	 SELECT COUNT(*) AS TOTAL_PACKAGES FROM PACKAGE;
		Q4.2 CALCULATE AVERAGE COST OF ALL THE PACKAGES.
		 	 SELECT AVG(PCK_PRICE) AS AVERAGE_PACKAGE_PRICE FROM PACKAGE;
		Q4.3 FIND THE COSTLIEST PACKAGE AMONG THE AVAILABLE PACKAGES.
		 	 SELECT MAX(PCK_PRICE) AS MAXIMUM_PACKAGE_PRICE FROM PACKAGE;
		Q4.4 FIND THE CHEAPEST PACKAGE AMONG THE AVAILABLE PACKAGES.
		 	 SELECT MIN(PCK_PRICE) AS MINIMUM_PACKAGE_PRICE FROM PACKAGE;
		Q4.5 FIND THE SUM OF PRICE OF ALL THE AVAILABLE PACKAGES.
		 	 SELECT SUM(PCK_PRICE) AS TOTAL_PACKAGE_PRICE FROM PACKAGE;
		 	 
	Q5: REPORTED QUERIES
		Q5.1 PRODUCE A REPORT TO THE CUSTOMER ABOUT THE RESERVATION HE MADE. THE REPORT SHOULD CONTAIN
			 CUSTOMER ID AND NAME, TRAVEL AGENCY NAME, RESERVATION ID, NO. OF PEOPLE, START DATE AND END DATE, 
			 AND PAYMENT MADE.
			 SELECT R.C_ID,C.C_FNAME,C.C_LNAME,T.TA_NAME,R.R_ID,R.R_PEOPLE,R.R_START_DATE,R.R_END_DATE,P.P_PRICE
			 FROM RESERVATION R, PAYMENT P, CUSTOMER C,AGENCY_CUSTOMER A, TRAVEL_AGENCY T
			 WHERE R.C_ID=C.C_ID AND C.C_ID=A.C_ID AND A.TA_ID=T.TA_ID AND R.R_ID=P.R_ID;
		Q5.2 PRODUCE A REPORT CONTAINING CUSTOMER'S ID, TOTAL AMOUNT SPENT BY HIM AND NO. OF BOOKINGS MADE BY HIM.
			 SELECT P.C_ID, SUM(P.P_PRICE) AS TOTAL_AMOUNT, COUNT(*) AS NUM_OF_RESERVATION
			 FROM PAYMENT P
			 GROUP BY P.C_ID
			 ORDER BY P.C_ID;
		Q5.3 PRODUCE A REPORT CONTAINING TRAVEL AGENCY'S ID, TOTAL PROFIT EARNED AND TOTAL NO. OF CUSTOMERS.
			 SELECT A.TA_ID, COUNT(*) AS NUM_OF_CUSTOMERS, SUM(P.P_PRICE) AS TOTAL_PROFIT
			 FROM AGENCY_CUSTOMER A, PAYMENT P
			 WHERE A.C_ID=P.C_ID
			 GROUP BY A.TA_ID;
		Q5.4 LIST THE CUSTOMERS WHO GOT PROMOTIONS AND DISPLAY THE DETAILS.
			 SELECT DISTINCT R.C_ID,A.TA_ID,P.PCK_ID,P.PR_DETAILS
			 FROM RESERVATION R, AGENCY_CUSTOMER A, PROMOTION P
			 WHERE A.C_ID=P.C_ID AND P.TA_ID=A.TA_ID;

5.1.4: NESTED QUERIES
		Q1: LIST THE CUSTOMERS OF MAKE TRIP AND PAYTM.
			SELECT * FROM CUSTOMER WHERE C_ID NOT IN(
			SELECT C_ID FROM AGENCY_CUSTOMER WHERE TA_ID IN(
			SELECT TA_ID FROM TRAVEL_AGENCY WHERE TA_NAME = 'MAKEMYTRIP' OR TA_NAME = 'PAYTM'));
		Q2: LIST THE CUSTOMERS HAVING ACCOUNT IN DIFFERENT AGENCIES.
			SELECT TRAVEL_AGENCY.TA_NAME
			FROM TRAVEL_AGENCY
			WHERE TRAVEL_AGENCY.TA_ID IN(
			SELECT AGENCY_CUSTOMER.TA_ID
			FROM AGENCY_CUSTOMER
			WHERE AGENCY_CUSTOMER.C_ID = '1C00000010');

5.1.5: TRIGGERS
		Q1: TRIGGER TO CHECK THE PAYMENT MADE IS NOT NEGATIVE.
			CREATE OR REPLACE TRIGGER TRIGGER_PAYMENT_CHECK
			BEFORE INSERT ON PAYMENT FOR EACH ROW
			DECLARE
			BEGIN
					IF(:NEW.P_PRICE < 0) THEN
					RAISE_APPLICATION_ERROR(-20010, 'YOU CAN NOT PAY NEGATIVE AMOUNT');
					END IF;
			END;
		Q2: TRIGGER TO MAKE SURE THAT THE TOUR DOES NOT START AFTER THE END DATE.
			CREATE OR REPLACE TRIGGER RESERVATION_PACKAGE_DATE_CHECK
			BEFORE INSERT ON RESERVATION FOR EACH ROW
			DECLARE
			BEGIN
					IF(:NEW.R_END_DATE < :NEW.R_START_DATE) THEN
					RAISE_APPLICATION_ERROR(-20010, 'YOU CAN NOT START TRIP AFTER END DATE');
					END IF;
			END;
		
5.1.6: PROCEDURES
		Q1: PROCEDURE TO GET ALL THE AGENCIES A PARTICULAR CUSTOMER IS RELATED TO.
			CREATE OR REPLACE PROCEDURE
			PROCEDURE_FIND_AGENCIES_RELATED_TO(CUSTOMER_ID IN VARCHAR) IS
			CURSOR A1 IS
			SELECT TRAVEL_AGENCY.TA_NAME
			FROM TRAVEL_AGENCY
			WHERE TRAVEL_AGENCY.TA_ID IN(
					SELECT AGENCY_CUSTOMER.TA_ID
					FROM AGENCY_CUSTOMER
					WHERE AGENCY_CUSTOMER.C_ID = CUSTOMER_ID);
			C1 TRAVEL_AGENCY.TA_NAME%TYPE;
			BEGIN
					OPEN A1;
					FETCH A1 INTO C1;
					LOOP
							EXIT WHEN A1%NOTFOUND;
							DBMS_OUTPUT.PUT_LINE('TRAVEL AGENCY NAME ' || C1);
							FETCH A1 INTO C1;
					END LOOP;
					CLOSE A1;
			END;
		Q2:	PROCEDURE TO GET LIST OF CUSTOMERS IN AGENCY.
			CREATE OR REPLACE PROCEDUREPROCEDURE_FIND_CUSTOMERS_RELATED_TO(AGENCY_ID IN VARCHAR) IS
			CURSOR A1 IS
			SELECT CUSTOMER.C_FNAME, CUSTOMER.C_LNAME, CUSTOMER.C_ID
			FROM CUSTOMER, AGENCY_CUSTOMER
			WHERE CUSTOMER.C_ID = AGENCY_CUSTOMER.C_ID AND AGENCY_CUSTOMER.TA_ID = AGENCY_ID;
			C1 CUSTOMER.C_FNAME%TYPE;
			C2 CUSTOMER.C_LNAME%TYPE;
			C3 CUSTOMER.C_ID%TYPE;
			BEGIN
					OPEN A1;
					FETCH A1 INTO C1, C2, C3;
					LOOP
							EXIT WHEN A1%NOTFOUND;
							DBMS_OUTPUT.PUT_LINE('NAME: ' || C1 || ' ' || C2 || ', CUSTOMER ID: ' || C3);
							FETCH A1 INTO C1, C2, C3;
					END LOOP;
					CLOSE A1;
			END;



DROP TABLE PAYMENT;
DROP TABLE PROMOTION;
DROP TABLE RESERVATION;
DROP TABLE PACKAGE;
DROP TABLE AGENCY_CUSTOMER;
DROP TABLE C_ADDRESS;
DROP TABLE CUSTOMER;
DROP TABLE RECOMMENDED_PACKAGE_TOUR;
DROP TABLE TA_ADDRESS;
DROP TABLE TRAVEL_AGENCY;
